import matplotlib.pyplot as plt
import numpy as np

def reject_outliers(data, m = 2.):
    d = np.abs(data - np.median(data))
    mdev = np.median(d)
    s = d/mdev if mdev else 0.
    return data[s<m]

absoluteErrors = np.array([
  0.83231125,  0.07112305,  5.13883789,  9.62800537,  1.39558594,  0.10049561,
  5.75986328,  0.4911377 ,  0.56195835,  2.07132813,  0.82675049,  2.97235352,
  0.53587223,  1.03618652,  0.64632813, 14.72462891,  1.9549585 ,  0.40599976,
  0.25141998,  0.72568359,  0.84263199,  1.73476074,  2.12464355,  3.49586914,
  2.74117187,  2.61673828,  0.36322021,  3.86381348,  0.14050293,  0.45363731,
  4.05649414,  1.50494141,  0.25019409,  0.78358398,  0.66745056,  3.13666504,
  0.19315674,  0.92458984,  6.39291016,  0.60358398,  2.20581055,  1.20347908,
  2.96994629,  1.13788651,  1.95405273,  0.9117041 ,  0.1809021 ,  7.12936523,
  9.97538086,  0.59309784, 10.31533203,  3.45422363,  3.79447266,  4.26837891,
  0.25463013,  2.22757813,  1.64777344,  0.79272491,  0.05934181,  0.18393066,
  3.44963867,  0.66731445,  0.99456299,  4.05269043,  0.59374668,  0.31038574,
  0.65183632,  1.37297363,  0.27177734,  0.63922455,  1.43183258,])
nonOutliers = reject_outliers(absoluteErrors)
print('outliers:', np.setdiff1d(absoluteErrors, nonOutliers))
plt.hist(absoluteErrors, bins=25)
plt.xlabel('Absolute error')
plt.ylabel('# cases')
plt.title('2020-12-16 training, fine-tuning v2, attempt 1')
plt.show()